<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Ministere;
use AppBundle\Entity\Utilisateur;
use AppBundle\EnumTypes\EnumStatutCampagne;

/**
 * CampagnePncRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CampagnePncRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * Récupére les campagnes Pnc d'un ministère.
     *
     * @param Ministere $ministere Le ministère
     *
     * @return array
     */
    public function recupereCampagnesPncMinistere(Ministere $ministere)
    {
        return $this->findBy(array('ministere' => $ministere));
    }

    /**
     * Renvoie les $max campagne récentes.
     *
     * @param int $max
     *
     * @return array
     */
    public function findCampagnesRecentes(Utilisateur $utilisateurCourant, $max = null)
    {
        $orderBy = array('anneeEvaluee' => 'desc', 'ministere' => 'asc', 'libelle' => 'asc');

        if ($utilisateurCourant->hasRole('ROLE_ADMIN')) {
            $resultat = $this->findBy(array(), $orderBy);
        } else {
            $resultat = $this->findBy(array('ministere' => $utilisateurCourant->getMinistere()), $orderBy);
        }

        if ($max) {
            $resultat = array_slice($resultat, 0, $max);
        }

        return $resultat;
    }

    /**
     * Renvoie les $max campagne récentes visibles par l'ADMIN_MIN.
     *
     * @param int $max
     *
     * @return array
     */
    public function findCampagnesRecentesAdminMin(Utilisateur $utilisateurCourant, $max = null)
    {
        $statuts = array(EnumStatutCampagne::OUVERTE, EnumStatutCampagne::FERMEE, EnumStatutCampagne::CLOTUREE);

        $qb = $this->createQueryBuilder('c');

        $qb->where($qb->expr()->in('c.statut', $statuts))
        ->andWhere('c.ministere = :MINISTERE')
        ->setParameter('MINISTERE', $utilisateurCourant->getMinistere())
        ->orderBy('c.anneeEvaluee', 'desc')
        ->addOrderBy('c.ministere', 'asc')
        ->addOrderBy('c.libelle', 'asc');

        $resultat = $qb->getQuery()->getResult();

        if ($max) {
            $resultat = array_slice($resultat, 0, $max);
        }

        return $resultat;
    }

    /**
     * Renvoie le nombre de campagnes au statut $statut.
     */
    public function countCampagnesPnc(Ministere $ministere, $statut)
    {
        $resultat = $this->findBy(array('ministere' => $ministere, 'statut' => $statut));

        return count($resultat);
    }
}
